Net(
  (msconv): Conv2d(8, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (pconv): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (msencoder): FeatureEncoder(
    (conv1): HinResBlock(
      (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_1): LeakyReLU(negative_slope=0.2)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_2): LeakyReLU(negative_slope=0.2)
      (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    )
    (conv2): HinResBlock(
      (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_1): LeakyReLU(negative_slope=0.2)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_2): LeakyReLU(negative_slope=0.2)
      (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    )
  )
  (panencoder): FeatureEncoder(
    (conv1): HinResBlock(
      (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_1): LeakyReLU(negative_slope=0.2)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_2): LeakyReLU(negative_slope=0.2)
      (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    )
    (conv2): HinResBlock(
      (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
      (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_1): LeakyReLU(negative_slope=0.2)
      (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (relu_2): LeakyReLU(negative_slope=0.2)
      (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    )
  )
  (maskp): MaskPredictor(
    (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (spatial_mask): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (relu): LeakyReLU(negative_slope=0.1)
  )
  (moeInstance): MOEInstance(
    (lf_experts): LfExpert(
      (gate): GateNetwork(
        (gap): AdaptiveMaxPool2d(output_size=1)
        (gap2): AdaptiveAvgPool2d(output_size=1)
        (fc0): Linear(in_features=32, out_features=4, bias=True)
        (fc1): Linear(in_features=32, out_features=4, bias=True)
        (relu1): LeakyReLU(negative_slope=0.2)
        (softmax): Softmax(dim=1)
        (sp): Softplus(beta=1, threshold=20)
      )
      (pre_fuse): Sequential(
        (0): InvBlock(
          (F): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (G): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (H): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (invconv): InvertibleConv1x1()
        )
        (1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (expert_networks_d): ModuleList(
        (0-3): 4 x LfInstance(
          (process): ConvProce(
            (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu1): LeakyReLU(negative_slope=0.2)
            (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
    )
    (hf_experts): HfExpert(
      (gate): GateNetwork(
        (gap): AdaptiveMaxPool2d(output_size=1)
        (gap2): AdaptiveAvgPool2d(output_size=1)
        (fc0): Linear(in_features=32, out_features=4, bias=True)
        (fc1): Linear(in_features=32, out_features=4, bias=True)
        (relu1): LeakyReLU(negative_slope=0.2)
        (softmax): Softmax(dim=1)
        (sp): Softplus(beta=1, threshold=20)
      )
      (expert_networks_d): ModuleList(
        (0-3): 4 x HfInstance(
          (process): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=0.2)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=0.2)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
        )
      )
      (pre_fuse): Sequential(
        (0): InvBlock(
          (F): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (G): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (H): HinResBlock(
            (identity): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
            (conv_1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_1): LeakyReLU(negative_slope=1)
            (conv_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (relu_2): LeakyReLU(negative_slope=1)
            (conv_3): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): InstanceNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          )
          (invconv): InvertibleConv1x1()
        )
        (1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (decoder): Decoder(
    (gate): GateNetwork(
      (gap): AdaptiveMaxPool2d(output_size=1)
      (gap2): AdaptiveAvgPool2d(output_size=1)
      (fc0): Linear(in_features=32, out_features=4, bias=True)
      (fc1): Linear(in_features=32, out_features=4, bias=True)
      (relu1): LeakyReLU(negative_slope=0.2)
      (softmax): Softmax(dim=1)
      (sp): Softplus(beta=1, threshold=20)
    )
    (expert_networks_d): ModuleList(
      (0-3): 4 x ConvProce(
        (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (relu1): LeakyReLU(negative_slope=0.2)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (pre_fuse): Sequential(
      (0): InvBlock(
        (F): HinResBlock(
          (identity): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_1): LeakyReLU(negative_slope=1)
          (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_2): LeakyReLU(negative_slope=1)
          (conv_3): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
        (G): HinResBlock(
          (identity): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_1): LeakyReLU(negative_slope=1)
          (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_2): LeakyReLU(negative_slope=1)
          (conv_3): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
        (H): HinResBlock(
          (identity): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          (conv_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_1): LeakyReLU(negative_slope=1)
          (conv_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (relu_2): LeakyReLU(negative_slope=1)
          (conv_3): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): InstanceNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
        (invconv): InvertibleConv1x1()
      )
      (1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (refine): Refine(
    (conv_in): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (process): Sequential(
      (0): ChannelAttention(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (conv_du): Sequential(
          (0): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): ReLU(inplace=True)
          (2): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (3): Sigmoid()
        )
        (process): Sequential(
          (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (1): ReLU()
          (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
      )
    )
    (conv_last): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
